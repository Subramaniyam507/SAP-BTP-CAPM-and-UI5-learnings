"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getBackendSystemDisplayName = getBackendSystemDisplayName;
exports.getSystemDisplayName = getSystemDisplayName;
const i18n_1 = require("./i18n");
/**
 * Creates and returns a display name for the system, appending the system type and user display name if available.
 *
 * @param system the backend system to create a display name for
 * @returns the display name for the system
 */
function getBackendSystemDisplayName(system) {
    const systemTypeName = getSystemDisplayName(system.name, system.userDisplayName, system.systemType);
    return systemTypeName;
}
/**
 * Get the system display name.
 *
 * @param systemName - system name
 * @param displayUsername - display username
 * @param systemType - 'ABAPCloud' or undefined
 * @returns system display name
 */
function getSystemDisplayName(systemName, displayUsername, systemType) {
    const userDisplayName = displayUsername ? ` [${displayUsername}]` : '';
    return `${systemName}${getSystemTypeLabel(systemType)}${userDisplayName}`;
}
/**
 * Returns the formatted system type name for the given backend system.
 *
 * @param systemType the system type to get the parenthesised name for
 * @returns system type name formatted as a string, e.g. " (ABAP Cloud)".
 */
function getSystemTypeLabel(systemType) {
    let systemTypeName = ''; // for on prem we do not show the system type
    const abapCloudLabel = ` (${(0, i18n_1.t)('texts.systemTypeLabel.abapCloud')})`;
    // Legacy store system types will now display as ABAP Cloud
    if (systemType === 'ABAPCloud' || systemType === 'S4HC' || systemType === 'BTP') {
        systemTypeName = abapCloudLabel;
    }
    return systemTypeName;
}
//# sourceMappingURL=system-utils.js.map
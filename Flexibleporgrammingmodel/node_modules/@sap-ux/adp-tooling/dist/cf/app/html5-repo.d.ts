import type { ToolsLogger } from '@sap-ux/logger';
import type { HTML5Content, ServiceKeys, Uaa, CfAppParams } from '../../types';
/**
 * Get the OAuth token from HTML5 repository.
 *
 * @param {Uaa} uaa UAA credentials
 * @returns {Promise<string>} OAuth token
 */
export declare function getToken(uaa: Uaa): Promise<string>;
/**
 * Download zip from HTML5 repository.
 *
 * @param {string} token - HTML5 reposiotry token.
 * @param {string} appHostId - appHostId where content is stored.
 * @param {string} uri - URL with parameters.
 * @returns {Promise<Buffer>} File buffer content.
 */
export declare function downloadZip(token: string, appHostId: string, uri: string): Promise<Buffer>;
/**
 * Get HTML5 repo credentials.
 *
 * @param {string} spaceGuid space guid
 * @param {ToolsLogger} logger logger to log messages
 * @returns {Promise<ServiceKeys>} credentials json object
 */
export declare function getHtml5RepoCredentials(spaceGuid: string, logger: ToolsLogger): Promise<ServiceKeys>;
/**
 * Download base app manifest.json and xs-app.json from HTML5 repository.
 *
 * @param {string} spaceGuid current space guid
 * @param {CfAppParams} parameters appName, appVersion, appHostId
 * @param {ToolsLogger} logger logger to log messages
 * @returns {Promise<AdmZip.IZipEntry[]>} manifest.json and xs-app.json
 */
export declare function downloadAppContent(spaceGuid: string, parameters: CfAppParams, logger: ToolsLogger): Promise<HTML5Content>;
//# sourceMappingURL=html5-repo.d.ts.map